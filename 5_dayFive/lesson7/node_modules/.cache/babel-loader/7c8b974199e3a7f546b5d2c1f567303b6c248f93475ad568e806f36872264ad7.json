{"ast":null,"code":"var _jsxFileName = \"E:\\\\nodeLearn\\\\react\\\\4_dayFour\\\\lesson6\\\\src\\\\Test3.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useImmer } from 'use-immer';\n// immutable 不可变的编程\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Test3() {\n  _s();\n  const [count, setCount] = useState(0);\n  const [data, setData] = useImmer({\n    name: 'dell',\n    age: 18\n  });\n  const [array, setArray] = useImmer([1, 2, 3]);\n  let index = 0;\n  // count = 2;// 违背 快照里面的值不可变\n  function handleClick() {\n    // 修改值了之后重新渲染 但是快照里面count的值不会变 称之为 immutable 不可变的编程\n    setCount(count + 1);\n  }\n  // 快照里的数据 不能直接去更改其值 需要构造一个新的容器 在下次渲染中使用新的容器修改\n  function handleObjClick() {\n    // 报错\n    // data.name = 'lee';\n    // setData(data);\n    // useState 写法\n    // const newData = { ...data };\n    // newData.name = 'lee';\n    // setData(newData);\n    // useImmer 写法\n    // immer 会自动帮我们构造一个新的容器 并且把旧的容器的值拷贝过来\n    // 并且把新的容器返回 旧的容器不会被改变 但是新的容器会被改变\n    setData(draft => {\n      draft.name = data.name + 'lee';\n    });\n  }\n  function handleArrayClick() {\n    setArray(draft => {\n      draft.push(array[array.length - 1] + 1);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => {\n        handleClick();\n      },\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => {\n        handleObjClick();\n      },\n      children: [data.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), data.age]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => {\n        handleArrayClick();\n      },\n      children: array.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Test3, \"z3zqlPGbfLbGQC0Yo14bZM3bN50=\", false, function () {\n  return [useImmer, useImmer];\n});\n_c = Test3;\nexport default Test3;\nvar _c;\n$RefreshReg$(_c, \"Test3\");","map":{"version":3,"names":["useState","useImmer","jsxDEV","_jsxDEV","Fragment","_Fragment","Test3","_s","count","setCount","data","setData","name","age","array","setArray","index","handleClick","handleObjClick","draft","handleArrayClick","push","length","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","item","_c","$RefreshReg$"],"sources":["E:/nodeLearn/react/4_dayFour/lesson6/src/Test3.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useImmer } from 'use-immer';\r\n// immutable 不可变的编程\r\nfunction Test3() {\r\n  const [count, setCount] = useState(0);\r\n  const [data, setData] = useImmer({ name: 'dell', age: 18 });\r\n  const [array, setArray] = useImmer([1, 2, 3]);\r\n  let index = 0;\r\n  // count = 2;// 违背 快照里面的值不可变\r\n  function handleClick() {\r\n    // 修改值了之后重新渲染 但是快照里面count的值不会变 称之为 immutable 不可变的编程\r\n    setCount(count + 1);\r\n  }\r\n  // 快照里的数据 不能直接去更改其值 需要构造一个新的容器 在下次渲染中使用新的容器修改\r\n  function handleObjClick() {\r\n    // 报错\r\n    // data.name = 'lee';\r\n    // setData(data);\r\n    // useState 写法\r\n    // const newData = { ...data };\r\n    // newData.name = 'lee';\r\n    // setData(newData);\r\n    // useImmer 写法\r\n    // immer 会自动帮我们构造一个新的容器 并且把旧的容器的值拷贝过来\r\n    // 并且把新的容器返回 旧的容器不会被改变 但是新的容器会被改变\r\n    setData((draft) => {\r\n      draft.name = data.name + 'lee';\r\n    });\r\n  }\r\n  function handleArrayClick() {\r\n    setArray((draft) => {\r\n      draft.push(array[array.length - 1] + 1);\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <div\r\n        onClick={() => {\r\n          handleClick();\r\n        }}>\r\n        {count}\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          handleObjClick();\r\n        }}>\r\n        {data.name}\r\n        <br />\r\n        {data.age}\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          handleArrayClick()\r\n        }}>\r\n        {array.map((item, index) => {\r\n          return <div key={index}>{item}</div>;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Test3;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,QAAQ,WAAW;AACpC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC;IAAEW,IAAI,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAG,CAAC,CAAC;EAC3D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAC7C,IAAIe,KAAK,GAAG,CAAC;EACb;EACA,SAASC,WAAWA,CAAA,EAAG;IACrB;IACAR,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB;EACA;EACA,SAASU,cAAcA,CAAA,EAAG;IACxB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAP,OAAO,CAAEQ,KAAK,IAAK;MACjBA,KAAK,CAACP,IAAI,GAAGF,IAAI,CAACE,IAAI,GAAG,KAAK;IAChC,CAAC,CAAC;EACJ;EACA,SAASQ,gBAAgBA,CAAA,EAAG;IAC1BL,QAAQ,CAAEI,KAAK,IAAK;MAClBA,KAAK,CAACE,IAAI,CAACP,KAAK,CAACA,KAAK,CAACQ,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IACzC,CAAC,CAAC;EACJ;EACA,oBACEnB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACEpB,OAAA;MACEqB,OAAO,EAAEA,CAAA,KAAM;QACbP,WAAW,CAAC,CAAC;MACf,CAAE;MAAAM,QAAA,EACDf;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNzB,OAAA;MACEqB,OAAO,EAAEA,CAAA,KAAM;QACbN,cAAc,CAAC,CAAC;MAClB,CAAE;MAAAK,QAAA,GACDb,IAAI,CAACE,IAAI,eACVT,OAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACLlB,IAAI,CAACG,GAAG;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNzB,OAAA;MACEqB,OAAO,EAAEA,CAAA,KAAM;QACbJ,gBAAgB,CAAC,CAAC;MACpB,CAAE;MAAAG,QAAA,EACDT,KAAK,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEd,KAAK,KAAK;QAC1B,oBAAOb,OAAA;UAAAoB,QAAA,EAAkBO;QAAI,GAAZd,KAAK;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC;MACtC,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACN,CAAC;AAEP;AAACrB,EAAA,CAzDQD,KAAK;EAAA,QAEYL,QAAQ,EACNA,QAAQ;AAAA;AAAA8B,EAAA,GAH3BzB,KAAK;AA0Dd,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}