{"ast":null,"code":"var _jsxFileName = \"E:\\\\nodeLearn\\\\react\\\\dayThree\\\\lesson6\\\\src\\\\Game.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Board from './Board';\nimport History from './History';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2],\n  // 横\n  [3, 4, 5], [6, 7, 8], [0, 3, 6],\n  // 竖\n  [1, 4, 7], [2, 5, 8], [0, 4, 8],\n  // 斜\n  [2, 4, 6]];\n  // 判断是否三个都存在 上面二位数组为所有可能赢的棋子布局 如果下述三个都存在 并且相等 则代表胜利\n  for (let i = 0; i < lines.length; i++) {\n    // const [a, b, c] = lines[i];\n    const a = lines[i][0];\n    const b = lines[i][1];\n    const c = lines[i][2];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      // return squares[a];\n      return `${squares[a]}`;\n    }\n  }\n  const filledSquares = squares.filter(item => item === 'X' || item === 'O');\n  console.log('filledSquares: ', filledSquares);\n  console.log('filledSquares.length: ', filledSquares.length);\n  if (filledSquares.length === 9) {\n    return 'Nobody Win';\n  }\n  return null;\n}\nfunction Game() {\n  _s();\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [history, setHistory] = useState(Array(0));\n  const handleSquareChange = newSquares => {\n    setSquares(newSquares);\n    setHistory([...history, newSquares]);\n  };\n  const handleHistoryChange = index => {\n    const newSquares = history[index];\n    setSquares(newSquares);\n  };\n  // 是否已经存在胜利者\n  const winner = calculateWinner(squares);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        squares: squares,\n        onChange: handleSquareChange,\n        winner: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-history\",\n      children: winner ? /*#__PURE__*/_jsxDEV(History, {\n        history: history,\n        onChange: handleHistoryChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 47\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"jlR84Wa6dN6idBqi1THcjk/GA8g=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","Board","History","jsxDEV","_jsxDEV","calculateWinner","squares","lines","i","length","a","b","c","filledSquares","filter","item","console","log","Game","_s","setSquares","Array","fill","history","setHistory","handleSquareChange","newSquares","handleHistoryChange","index","winner","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/nodeLearn/react/dayThree/lesson6/src/Game.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport Board from './Board';\r\nimport History from './History';\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2], // 横\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6], // 竖\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8], // 斜\r\n    [2, 4, 6],\r\n  ];\r\n  // 判断是否三个都存在 上面二位数组为所有可能赢的棋子布局 如果下述三个都存在 并且相等 则代表胜利\r\n  for (let i = 0; i < lines.length; i++) {\r\n    // const [a, b, c] = lines[i];\r\n    const a = lines[i][0];\r\n    const b = lines[i][1];\r\n    const c = lines[i][2];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      // return squares[a];\r\n      return `${squares[a]}`;\r\n    }\r\n  }\r\n  const filledSquares = squares.filter((item) => item === 'X' || item === 'O');\r\n  console.log('filledSquares: ', filledSquares);\r\n  console.log('filledSquares.length: ', filledSquares.length);\r\n  if (filledSquares.length === 9) {\r\n    return 'Nobody Win';\r\n  }\r\n  return null;\r\n}\r\nfunction Game() {\r\n  const [squares, setSquares] = useState(Array(9).fill(null));\r\n  const [history, setHistory] = useState(Array(0));\r\n  const handleSquareChange = (newSquares) => {\r\n    setSquares(newSquares);\r\n    setHistory([...history, newSquares]);\r\n  };\r\n  const handleHistoryChange = (index) => {\r\n    const newSquares = history[index];\r\n    setSquares(newSquares);\r\n  };\r\n  // 是否已经存在胜利者\r\n  const winner = calculateWinner(squares);\r\n  return (\r\n    <div className='game'>\r\n      <div className='game-board'>\r\n        <Board squares={squares} onChange={handleSquareChange} winner={winner} />\r\n      </div>\r\n      <div className='game-history'>{winner ? <History history={history} onChange={handleHistoryChange} /> : null}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}