{"ast":null,"code":"var _jsxFileName = \"E:\\\\nodeLearn\\\\react\\\\5_dayFive\\\\lesson7\\\\src\\\\Test3Immer.jsx\",\n  _s = $RefreshSig$();\nimport { useReducer } from 'react';\nimport { useState } from 'react';\nimport { useImmerReducer } from 'use-immer';\n// import { dataReducer } from './reducer';\n\n// recuder 优点\n// 1. 业务逻辑代码和渲染代码分离 便于维护\n// 2. 代码可读性更高\n// 3. 前端自动化测试方便 Jest\n\n// reducer 缺点\n// 1. 代码量增加\n// 2. 逻辑复杂度增加\n// 3. 逻辑耦合 代码复用性低\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction dataReducer(state, action) {\n  const newState = {\n    ...state\n  };\n  switch (action.type) {\n    case 'changeInput':\n      newState.inputValue = action.payload;\n      return newState;\n    case 'addItem':\n      newState.list = [...newState.list, action.payload];\n      newState.inputValue = '';\n      return newState;\n    case 'deleteItem':\n      newState.list = newState.list.filter((item, index) => {\n        return index !== action.payload;\n      });\n      return newState;\n    default:\n      return state;\n  }\n}\nfunction ReducerTest() {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [data, dispatchDate] = useReducer(dataReducer, {\n    inputValue: '',\n    list: [1, 2, 3]\n  });\n  const handleListItemClick = index => {\n    const action = {\n      type: 'deleteItem',\n      payload: index\n    };\n    dispatchDate(action);\n  };\n  const handleAddToList = () => {\n    const action = {\n      type: 'addItem',\n      payload: inputValue\n    };\n    dispatchDate(action);\n    setInputValue('');\n  };\n  const handleInputChange = e => {\n    const action = {\n      type: 'changeInput',\n      payload: e.target.bvalue\n    };\n    dispatchDate(action);\n    setInputValue(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => {\n        handleInputChange(e);\n      },\n      type: \"text\",\n      value: inputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        handleAddToList();\n      },\n      children: \"Click to Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.list.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => {\n            handleListItemClick(index);\n          },\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ReducerTest, \"unhhwDTOnOjH6HOU7AchDJg7LEE=\");\n_c = ReducerTest;\nexport default ReducerTest;\nvar _c;\n$RefreshReg$(_c, \"ReducerTest\");","map":{"version":3,"names":["useReducer","useState","useImmerReducer","jsxDEV","_jsxDEV","Fragment","_Fragment","dataReducer","state","action","newState","type","inputValue","payload","list","filter","item","index","ReducerTest","_s","setInputValue","data","dispatchDate","handleListItemClick","handleAddToList","handleInputChange","e","target","bvalue","value","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","_c","$RefreshReg$"],"sources":["E:/nodeLearn/react/5_dayFive/lesson7/src/Test3Immer.jsx"],"sourcesContent":["import { useReducer } from 'react';\r\nimport { useState } from 'react';\r\nimport { useImmerReducer } from 'use-immer';\r\n// import { dataReducer } from './reducer';\r\n\r\n// recuder 优点\r\n// 1. 业务逻辑代码和渲染代码分离 便于维护\r\n// 2. 代码可读性更高\r\n// 3. 前端自动化测试方便 Jest\r\n\r\n// reducer 缺点\r\n// 1. 代码量增加\r\n// 2. 逻辑复杂度增加\r\n// 3. 逻辑耦合 代码复用性低\r\n\r\nfunction dataReducer(state, action) {\r\n  const newState = { ...state };\r\n  switch (action.type) {\r\n    case 'changeInput':\r\n      newState.inputValue = action.payload;\r\n      return newState;\r\n    case 'addItem':\r\n      newState.list = [...newState.list, action.payload];\r\n      newState.inputValue = '';\r\n      return newState;\r\n    case 'deleteItem':\r\n      newState.list = newState.list.filter((item, index) => {\r\n        return index !== action.payload;\r\n      });\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nfunction ReducerTest() {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [data, dispatchDate] = useReducer(dataReducer, {\r\n    inputValue: '',\r\n    list: [1, 2, 3],\r\n  });\r\n  const handleListItemClick = (index) => {\r\n    const action = {\r\n      type: 'deleteItem',\r\n      payload: index,\r\n    };\r\n    dispatchDate(action);\r\n  };\r\n  const handleAddToList = () => {\r\n    const action = {\r\n      type: 'addItem',\r\n      payload: inputValue,\r\n    };\r\n    dispatchDate(action);\r\n    setInputValue('');\r\n  };\r\n  const handleInputChange = (e) => {\r\n    const action = {\r\n      type: 'changeInput',\r\n      payload: e.target.bvalue,\r\n    };\r\n    dispatchDate(action);\r\n    setInputValue(e.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <input\r\n        onChange={(e) => {\r\n          handleInputChange(e);\r\n        }}\r\n        type='text'\r\n        value={inputValue}\r\n      />\r\n      <button\r\n        onClick={() => {\r\n          handleAddToList();\r\n        }}>\r\n        Click to Add\r\n      </button>\r\n      <ul>\r\n        {data.list.map((item, index) => {\r\n          return (\r\n            <li\r\n              key={index}\r\n              onClick={() => {\r\n                handleListItemClick(index);\r\n              }}>\r\n              {item}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\nexport default ReducerTest;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}